--drop table VEHICLE;
--drop table STOP_PASSAGE;
--drop table TRIP;
--drop table STOP_POINT;
--drop table ROUTE;



--setup h2gis http://www.h2gis.org/docs/1.3.1/home/
CREATE ALIAS IF NOT EXISTS H2GIS_EXTENSION FOR "org.h2gis.ext.H2GISExtension.load";
CALL H2GIS_EXTENSION();



create table ROUTE (
ID long PRIMARY KEY auto_increment,
DUID VARCHAR(255) UNIQUE NOT NULL,
LAST_MODIFICATION_TIMESTAMP TIMESTAMP,
IS_DELETED bit,
SHORT_NAME VARCHAR(255),
NUMBER int,
CATEGORY int	
);

create table STOP_POINT (
ID long PRIMARY KEY auto_increment,
DUID VARCHAR(255) UNIQUE NOT NULL,
NAME VARCHAR(MAX),
LAT_LONG POINT,
NUMBER int
);



create table TRIP (
ID long PRIMARY KEY auto_increment,
DUID VARCHAR(255) UNIQUE NOT NULL,
ROUTE_ID long NOT NULL references ROUTE(id),
FINISHED int,
DIRECTION int,
ORIGIN_STOP_NAME VARCHAR(255),
DESTINATION_STOP_NAME VARCHAR(255),
SCHEDULED_START TIMESTAMP,
ACTUAL_START TIMESTAMP,
SCHEDULED_FINISH TIMESTAMP,
ACTUAL_FINISH TIMESTAMP
);

CREATE INDEX TRIP_FINISHED ON TRIP(FINISHED);

create table STOP_PASSAGE (
ID long PRIMARY KEY auto_increment,
DUID VARCHAR(255) UNIQUE NOT NULL,
IS_DELETED bit,
TRIP_ID long,
FOREIGN KEY (TRIP_ID) references TRIP(ID) ON DELETE CASCADE,
STOP_POINT_ID long,
FOREIGN KEY (STOP_POINT_ID) references STOP_POINT(ID) ON DELETE CASCADE,
SCHEDULED_DEPARTURE TIMESTAMP,
ACTUAL_DEPARTURE TIMESTAMP,
SCHEDULED_ARRIVAL TIMESTAMP,
ACTUAL_ARRIVAL TIMESTAMP
);

CREATE INDEX STOP_PASSAGE_STOP_POINT_ID ON STOP_PASSAGE(STOP_POINT_ID);
CREATE INDEX STOP_PASSAGE_TRIP_ID ON STOP_PASSAGE(TRIP_ID);
CREATE INDEX STOP_PASSAGE_ACTUAL_ARRIVAL ON STOP_PASSAGE(ACTUAL_ARRIVAL);


create table VEHICLE (
ID long PRIMARY KEY auto_increment,
DUID VARCHAR(255) UNIQUE NOT NULL,
LAST_MODIFICATION_TIMESTAMP TIMESTAMP,
IS_DELETED bit,
CATEGORY int,
TRIP_DUID VARCHAR(255),
CURRENT_TRIP_ID long,
FOREIGN KEY(CURRENT_TRIP_ID) references TRIP(ID),
GEO_POSITION_STATUS int,
REFERENCE_TIME TIMESTAMP,
LAT_LONG POINT,
BEARING int,
IS_ACCESSIBLE bit,
PATTERN_DUID VARCHAR(255),
BIKE_RACK bit,
VEHICLE_NUMBER long,
OPERATIONAL_NUMBER long
);

CREATE INDEX VEHICLE_CURRENT_TRIP_ID ON VEHICLE(CURRENT_TRIP_ID);

ALTER TABLE TRIP ADD VEHICLE_ID long;
ALTER TABLE TRIP ADD FOREIGN KEY(VEHICLE_ID) references VEHICLE(id);
CREATE INDEX TRIP_VEHICLE_ID ON TRIP(VEHICLE_ID);



